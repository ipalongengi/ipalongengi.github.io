{"version":3,"sources":["webpack:///./node_modules/@pauliescanlon/gatsby-theme-terminal/src/layouts/PageLayout.js","webpack:///./src/pages/index.mdx","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"names":["PageLayout","children","useConfig","site","siteMetadata","name","description","keywords","siteUrl","siteImage","lang","pathname","location","titleTemplate","replace","type","title","canonical","image","path","_frontmatter","makeShortcode","props","console","warn","SiteMetaData","Fragment","Heading","Text","Divider","Button","Link","Alert","Flex","Box","SourceTags","SourceList","Card","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","variant","sx","mb","as","href","target","whiteSpace","parentName","flexWrap","width","pr","filter","tags","flexDirection","splice","sort","a","b","percent","map","tag","index","count","key","color","svg","fill","lineHeight","mr","flexBasis","xmlns","viewBox","height","projects","ml","theme","space","edge","node","frontmatter","date","slug","url","misc","fields","maxWidth","textDecoration","p","fontSize","format","Date","posts","isPrivate","isMDXComponent","_objectWithoutPropertiesLoose","source","excluded","i","sourceKeys","Object","keys","length","indexOf"],"mappings":"2FAAA,wFAkDeA,IAvCI,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAK/BC,cAHFC,KACEC,aAAgBC,EAHe,EAGfA,KAAMC,EAHS,EAGTA,YAAaC,EAHJ,EAGIA,SAAUC,EAHd,EAGcA,QAASC,EAHvB,EAGuBA,UAAWC,EAHlC,EAGkCA,KAIrE,OACE,YAAC,IAAD,KACE,YAAC,IAAD,KACE,YAAC,WAAD,MACG,YAAmB,IACVC,EADS,EAAfC,SACMD,SACFE,EAAgBF,EAASG,QAAQ,OAAQ,IAE/C,OACE,YAAC,WAAD,KACE,YAAC,IAAD,CACEC,KAAK,UACLC,MAAOX,EACPQ,cAAeA,EACfP,YAAaA,EACbE,QAASA,EACTS,UAAWN,EACXO,MAAOT,EACPU,KAAMR,EACNJ,SAAUA,GAAY,CAAC,IACvBG,KAAMA,QAMfT,M,8LCnCImB,EAAe,GAEtBC,EAAgB,SAAAhB,GAAI,OAAI,SAA6BiB,GAEzD,OADAC,QAAQC,KAAK,aAAenB,EAAO,2EAC5B,oBAASiB,KAGZG,EAAeJ,EAAc,gBAC7BK,EAAWL,EAAc,YACzBM,EAAUN,EAAc,WACxBO,EAAOP,EAAc,QACrBQ,EAAUR,EAAc,WACxBS,EAAST,EAAc,UACvBU,EAAOV,EAAc,QACrBW,EAAQX,EAAc,SACtBY,EAAOZ,EAAc,QACrBa,EAAMb,EAAc,OACpBc,EAAad,EAAc,cAC3Be,EAAaf,EAAc,cAC3BgB,EAAOhB,EAAc,QACrBiB,EAAc,CAClBlB,gBAEImB,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGpB,EACF,8BACD,OAAO,cAACiB,EAAD,iBAAeD,EAAiBhB,EAAhC,CAAuCoB,WAAYA,EAAYC,QAAQ,cAI5E,cAAClB,EAAD,CAAckB,QAAQ,iBACnB,SAAAvC,GAAgB,IAEbC,EAEED,EAFFC,KACAC,EACEF,EADFE,YAEF,OAAO,cAACoB,EAAD,CAAUiB,QAAQ,YACzB,cAAChB,EAAD,CAASiB,QAAQ,YAAYD,QAAQ,WAAWtC,GAChD,cAACuB,EAAD,CAAMe,QAAQ,QAAQrC,OAI1B,cAACuB,EAAD,CAASc,QAAQ,YACjB,cAACb,EAAD,CAAQe,GAAI,CACVC,GAAI,GACHC,GAAG,IAAIH,QAAQ,UAAUI,KAAK,yDAAyDC,OAAO,SAASN,QAAQ,UAFlH,wBAEyJ,IACzJ,cAACZ,EAAD,CAAMc,GAAI,CACRK,WAAY,UACXF,KAAK,yDAAyDC,OAAO,SAASN,QAAQ,QAFzF,yBAGA,cAACd,EAAD,CAASc,QAAQ,YACjB,cAACX,EAAD,CAAOY,QAAQ,UAAUD,QAAQ,SAAjC,6CAGA,cAACd,EAAD,CAASc,QAAQ,YACjB,cAACd,EAAD,CAASc,QAAQ,YACjB,iCACA,qDAAkC,4BAAYQ,WAAW,KAAvB,uBAAlC,uBACA,cAACtB,EAAD,CAASc,QAAQ,YACjB,cAACV,EAAD,CAAMY,GAAI,CACRO,SAAU,QACTT,QAAQ,QACb,cAACT,EAAD,CAAKW,GAAI,CACHQ,MAAO,CAAC,OAAQ,OAAQ,OACxBP,GAAI,EACJQ,GAAI,CAAC,EAAG,EAAG,IACVX,QAAQ,OACT,mCACN,cAAChB,EAAD,CAASiB,QAAQ,YAAYC,GAAI,CACzBC,GAAI,GACHH,QAAQ,WAFjB,SAGA,cAACZ,EAAD,CAAMiB,KAAK,0BAA0BJ,QAAQ,WAAWD,QAAQ,QAAhE,oBACA,cAACd,EAAD,CAASc,QAAQ,YACjB,cAAChB,EAAD,CAASiB,QAAQ,YAAYC,GAAI,CACzBC,GAAI,GACHH,QAAQ,WAFjB,WAGA,cAACZ,EAAD,CAAMiB,KAAK,qCAAqCJ,QAAQ,WAAWD,QAAQ,QAA3E,sCACA,cAACd,EAAD,CAASc,QAAQ,YACjB,cAAChB,EAAD,CAASiB,QAAQ,YAAYC,GAAI,CACzBC,GAAI,GACHH,QAAQ,WAFjB,UAGA,cAACZ,EAAD,CAAMiB,KAAK,oCAAoCJ,QAAQ,WAAWD,QAAQ,QAA1E,qCACA,cAACd,EAAD,CAASc,QAAQ,YACjB,cAAChB,EAAD,CAASiB,QAAQ,YAAYC,GAAI,CACzBC,GAAI,GACHH,QAAQ,WAFjB,YAGA,cAACZ,EAAD,CAAMiB,KAAK,6CAA6CJ,QAAQ,WAAWD,QAAQ,QAAnF,0CACA,cAACd,EAAD,CAASc,QAAQ,aAEjB,cAACT,EAAD,CAAKW,GAAI,CACHQ,MAAO,CAAC,OAAQ,OAAQ,OACxBP,GAAI,GACHH,QAAQ,OAET,sCACN,cAACR,EAAD,CAAYoB,OAAO,QAAQZ,QAAQ,eAChC,SAAAa,GAAI,OAAI,cAACvB,EAAD,CAAMY,GAAI,CACXY,cAAe,UACdd,QAAQ,QACZa,EAAKE,OAAO,EAAG,GAAGC,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,QAAUF,EAAEE,WAASC,KAAI,SAACC,EAAKC,GAAU,IAErE5D,EAGE2D,EAHF3D,KAEAyD,GACEE,EAFFE,MAEEF,EADFF,SAEF,OAAO,cAAC5B,EAAD,CAAKiC,IAAKF,EAAOpB,GAAI,CAC1BuB,MAAO,QACPtB,GAAI,EACJuB,IAAK,CACHC,KAAM,UAEP3B,QAAQ,OACT,cAACV,EAAD,CAAMY,GAAI,CACR0B,WAAY,UACX5B,QAAQ,QACT,cAACf,EAAD,CAAMiB,GAAI,CACRuB,MAAO,YACPI,GAAI,EACJ1B,GAAI,GACHH,QAAQ,QAJX,GAIsBtC,GACtB,cAACuB,EAAD,CAAMiB,GAAI,CACRuB,MAAO,SACNzB,QAAQ,QAAQmB,GACnB,cAAClC,EAAD,CAAMiB,GAAI,CACRuB,MAAO,SACNzB,QAAQ,QAFX,MAIF,cAACV,EAAD,CAAMU,QAAQ,QACb,cAACT,EAAD,CAAKS,QAAQ,OAAO,KACnB,cAACT,EAAD,CAAKW,GAAI,CACP4B,UAAW,QACV9B,QAAQ,OACT,qBAAK+B,MAAM,6BAA6BC,QAAQ,aAAatB,MAAM,OAAOuB,OAAO,KAC/E,sBAAMvB,MAAoB,EAAVS,EAAL,IAAqBc,OAAQ,MAG5C,cAAC1C,EAAD,CAAKS,QAAQ,OAAb,IAAqB,gBAQnC,oCACA,0CAAuB,4BAAYQ,WAAW,KAAvB,oCAAvB,uBAA2H,4BAAYA,WAAW,KAAvB,QAA3H,MACA,2DAAwC,4BAAYA,WAAW,KAAvB,YAAxC,6BACA,cAACf,EAAD,CAAYmB,OAAO,WAAWZ,QAAQ,eACvC,SAAAkC,GAAQ,OAAI,cAAC5C,EAAD,CAAMY,GAAI,CACjBO,SAAU,OACV0B,GAAI,SAAAC,GAAK,UAAQA,EAAMC,MAAM,GAApB,MACTR,GAAI,SAAAO,GAAK,UAAQA,EAAMC,MAAM,GAApB,OACRrC,QAAQ,QACVkC,EAASd,KAAI,SAACkB,EAAMhB,GAAU,MAWvBgB,EAAKC,KAXkB,IAEzBC,YACEnE,EAHuB,EAGvBA,MACAoE,EAJuB,EAIvBA,KAKAC,GATuB,EAKvBC,IALuB,EAMvBC,KANuB,EAQzBC,OACEH,MAGJ,OAAO,cAACnD,EAAD,CAAKiC,IAAKF,EAAOpB,GAAI,CAC1BC,GAAI,EACJ2C,SAAU,CAAC,OAAQ,MAAO,WAC1BpC,MAAO,CAAC,OAAQ,MAAO,YACtBV,QAAQ,OACT,cAACZ,EAAD,CAAMiB,KAAMqC,EAAMxC,GAAI,CACpB6C,eAAgB,QACf/C,QAAQ,QACT,cAACN,EAAD,CAAMQ,GAAI,CACRiC,GAAI,EACJN,GAAI,EACJmB,EAAG,GACFhD,QAAQ,QACT,cAACf,EAAD,CAAMiB,GAAI,CACR+C,SAAU,EACVxB,MAAO,SACNzB,QAAQ,QAAQkD,YAAO,IAAIC,KAAKV,GAAO,YAC1C,cAACzD,EAAD,CAASiB,QAAQ,YAAYC,GAAI,CAC/BuB,MAAO,QACNzB,QAAQ,WAAW3B,GACtB,cAACY,EAAD,CAAMiB,GAAI,CACR6C,eAAgB,aACf/C,QAAQ,QAFX,0BASZ,wCACA,0CAAuB,4BAAYQ,WAAW,KAAvB,iCAAvB,uBAAwH,4BAAYA,WAAW,KAAvB,QAAxH,MACA,8DAA2C,4BAAYA,WAAW,KAAvB,SAA3C,KACA,cAACf,EAAD,CAAYmB,OAAO,QAAQZ,QAAQ,eACpC,SAAAoD,GAAK,OAAI,cAAC9D,EAAD,CAAMY,GAAI,CACdO,SAAU,OACV0B,GAAI,SAAAC,GAAK,UAAQA,EAAMC,MAAM,GAApB,MACTR,GAAI,SAAAO,GAAK,UAAQA,EAAMC,MAAM,GAApB,OACRrC,QAAQ,QACVoD,EAAMxC,QAAO,SAAA0B,GAAI,OAAKA,EAAKC,KAAKC,YAAYa,aAAWrC,MAAK,SAACC,EAAGC,GAAJ,OAAU,IAAIiC,KAAKjC,EAAEqB,KAAKC,YAAYC,MAAQ,IAAIU,KAAKlC,EAAEsB,KAAKC,YAAYC,SAAO1B,OAAO,EAAG,GAAGK,KAAI,SAACkB,EAAMhB,GAAU,MAWxKgB,EAAKC,KAXmK,IAE1KC,YACEnE,EAHwK,EAGxKA,MACAoE,EAJwK,EAIxKA,KAKAC,GATwK,EAKxKC,IALwK,EAMxKC,KANwK,EAQ1KC,OACEH,MAGJ,OAAO,cAACnD,EAAD,CAAKiC,IAAKF,EAAOpB,GAAI,CAC1BC,GAAI,EACJ2C,SAAU,CAAC,OAAQ,MAAO,WAC1BpC,MAAO,CAAC,OAAQ,MAAO,YACtBV,QAAQ,OACT,cAACZ,EAAD,CAAMiB,KAAMqC,EAAMxC,GAAI,CACpB6C,eAAgB,QACf/C,QAAQ,QACT,cAACN,EAAD,CAAMQ,GAAI,CACRiC,GAAI,EACJN,GAAI,EACJmB,EAAG,GACFhD,QAAQ,QACT,cAACf,EAAD,CAAMiB,GAAI,CACR+C,SAAU,EACVxB,MAAO,SACNzB,QAAQ,QAAQkD,YAAO,IAAIC,KAAKV,GAAO,YAC1C,cAACzD,EAAD,CAASiB,QAAQ,YAAYC,GAAI,CAC/BuB,MAAO,QACNzB,QAAQ,WAAW3B,GACtB,cAACY,EAAD,CAAMiB,GAAI,CACR6C,eAAgB,aACf/C,QAAQ,QAFX,0BASZ,cAACd,EAAD,CAASc,QAAQ,YACjB,cAACV,EAAD,CAAMY,GAAI,CACRO,SAAU,QACTT,QAAQ,QACb,cAACT,EAAD,CAAKW,GAAI,CACHQ,MAAO,CAAC,OAAQ,MAAO,YACtBV,QAAQ,OACT,sCACN,cAACf,EAAD,CAAMe,QAAQ,QAAd,aACA,cAACf,EAAD,CAAMgB,QAAQ,eAAeD,QAAQ,QAArC,uBACA,cAACd,EAAD,CAASc,QAAQ,YACjB,cAACf,EAAD,CAAMe,QAAQ,QAAd,aACA,cAACf,EAAD,CAAMgB,QAAQ,eAAeD,QAAQ,QAArC,uBACA,cAACd,EAAD,CAASc,QAAQ,YACjB,cAACd,EAAD,CAASc,QAAQ,aAEjB,cAACT,EAAD,CAAKW,GAAI,CACHQ,MAAO,CAAC,OAAQ,MAAO,QACtBV,QAAQ,OACT,oCACN,cAACf,EAAD,CAAMe,QAAQ,QAAd,gBACA,cAACf,EAAD,CAAMgB,QAAQ,eAAeD,QAAQ,QAArC,YACA,cAACd,EAAD,CAASc,QAAQ,YACjB,cAACf,EAAD,CAAMe,QAAQ,QAAd,gBACA,cAACf,EAAD,CAAMgB,QAAQ,eAAeD,QAAQ,QAArC,YACA,cAACd,EAAD,CAASc,QAAQ,YACjB,cAACd,EAAD,CAASc,QAAQ,aAEjB,cAACT,EAAD,CAAKW,GAAI,CACHQ,MAAO,CAAC,OAAQ,MAAO,QACtBV,QAAQ,OACT,qCACN,cAACf,EAAD,CAAMe,QAAQ,QAAd,gBACA,cAACf,EAAD,CAAMgB,QAAQ,eAAeD,QAAQ,QAArC,YACA,cAACd,EAAD,CAASc,QAAQ,YACjB,cAACf,EAAD,CAAMe,QAAQ,QAAd,gBACA,cAACf,EAAD,CAAMgB,QAAQ,eAAeD,QAAQ,QAArC,YACA,cAACd,EAAD,CAASc,QAAQ,YACjB,cAACd,EAAD,CAASc,QAAQ,eAOnBF,EAAWwD,gBAAiB,G,kCC3Sb,SAASC,EAA8BC,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIhC,EAAKkC,EAFLpD,EAAS,GACTqD,EAAaC,OAAOC,KAAKL,GAG7B,IAAKE,EAAI,EAAGA,EAAIC,EAAWG,OAAQJ,IACjClC,EAAMmC,EAAWD,GACbD,EAASM,QAAQvC,IAAQ,IAC7BlB,EAAOkB,GAAOgC,EAAOhC,IAGvB,OAAOlB,EAZT","file":"component---src-pages-index-mdx-d545b6f1a9be7bfda320.js","sourcesContent":["/** @jsx jsx */\nimport { Fragment } from 'react'\nimport { jsx } from 'theme-ui'\nimport { Location } from '@reach/router'\nimport { ContextProvider } from '../context'\n\nimport { Seo } from '../components/Seo'\nimport { Main } from '../components/Main'\n\nimport { useConfig } from '../data'\n\nconst PageLayout = ({ children }) => {\n  const {\n    site: {\n      siteMetadata: { name, description, keywords, siteUrl, siteImage, lang },\n    },\n  } = useConfig()\n\n  return (\n    <ContextProvider>\n      <Main>\n        <Location>\n          {({ location }) => {\n            const { pathname } = location\n            const titleTemplate = pathname.replace(/\\//gm, '')\n\n            return (\n              <Fragment>\n                <Seo\n                  type=\"website\"\n                  title={name}\n                  titleTemplate={titleTemplate}\n                  description={description}\n                  siteUrl={siteUrl}\n                  canonical={pathname}\n                  image={siteImage}\n                  path={pathname}\n                  keywords={keywords || ['']}\n                  lang={lang}\n                />\n              </Fragment>\n            )\n          }}\n        </Location>\n        {children}\n      </Main>\n    </ContextProvider>\n  )\n}\n\nexport default PageLayout\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/ichwan/Documents/repos/personal-website/demo/node_modules/@pauliescanlon/gatsby-theme-terminal/src/layouts/PageLayout.js\";\nimport { format } from 'date-fns';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst SiteMetaData = makeShortcode(\"SiteMetaData\");\nconst Fragment = makeShortcode(\"Fragment\");\nconst Heading = makeShortcode(\"Heading\");\nconst Text = makeShortcode(\"Text\");\nconst Divider = makeShortcode(\"Divider\");\nconst Button = makeShortcode(\"Button\");\nconst Link = makeShortcode(\"Link\");\nconst Alert = makeShortcode(\"Alert\");\nconst Flex = makeShortcode(\"Flex\");\nconst Box = makeShortcode(\"Box\");\nconst SourceTags = makeShortcode(\"SourceTags\");\nconst SourceList = makeShortcode(\"SourceList\");\nconst Card = makeShortcode(\"Card\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <SiteMetaData mdxType=\"SiteMetaData\">\n      {siteMetadata => {\n        const {\n          name,\n          description\n        } = siteMetadata;\n        return <Fragment mdxType=\"Fragment\">\n        <Heading variant='styles.h1' mdxType=\"Heading\">{name}</Heading>\n        <Text mdxType=\"Text\">{description}</Text>\n        </Fragment>;\n      }}\n    </SiteMetaData>\n    <Divider mdxType=\"Divider\" />\n    <Button sx={{\n      mb: 2\n    }} as='a' variant='success' href='https://github.com/PaulieScanlon/gatsby-theme-terminal' target='_blank' mdxType=\"Button\">View theme on GitHub</Button>{\" \"}\n    <Link sx={{\n      whiteSpace: 'nowrap'\n    }} href='https://github.com/PaulieScanlon/gatsby-theme-terminal' target='_blank' mdxType=\"Link\">gatsby-theme-terminal</Link>\n    <Divider mdxType=\"Divider\" />\n    <Alert variant='success' mdxType=\"Alert\">\n  Alert... My website is faster than yours!\n    </Alert>\n    <Divider mdxType=\"Divider\" />\n    <Divider mdxType=\"Divider\" />\n    <h2>{`About`}</h2>\n    <p>{`Write anything you want in `}<inlineCode parentName=\"p\">{`src/pages/index.mdx`}</inlineCode>{` and it'll go here.`}</p>\n    <Divider mdxType=\"Divider\" />\n    <Flex sx={{\n      flexWrap: \"wrap\"\n    }} mdxType=\"Flex\">  \n  <Box sx={{\n        width: [\"100%\", \"100%\", \"55%\"],\n        mb: 3,\n        pr: [0, 0, 4]\n      }} mdxType=\"Box\">         \n        <h2>{`Contact`}</h2>\n  <Heading variant='styles.h3' sx={{\n          mb: 0\n        }} mdxType=\"Heading\">Email</Heading>\n  <Link href='mailto:******@gmail.com' variant='styles.a' mdxType=\"Link\">******@gmail.com</Link>\n  <Divider mdxType=\"Divider\" />\n  <Heading variant='styles.h3' sx={{\n          mb: 0\n        }} mdxType=\"Heading\">Twitter</Heading>\n  <Link href='https://twitter.com/PaulieScanlon/' variant='styles.a' mdxType=\"Link\">https://twitter.com/PaulieScanlon/</Link>\n  <Divider mdxType=\"Divider\" />\n  <Heading variant='styles.h3' sx={{\n          mb: 0\n        }} mdxType=\"Heading\">GitHub</Heading>\n  <Link href='https://github.com/PaulieScanlon/' variant='styles.a' mdxType=\"Link\">https://github.com/PaulieScanlon/</Link>\n  <Divider mdxType=\"Divider\" />\n  <Heading variant='styles.h3' sx={{\n          mb: 0\n        }} mdxType=\"Heading\">LinkedIn</Heading>\n  <Link href='https://www.linkedin.com/in/PaulieScanlon/' variant='styles.a' mdxType=\"Link\">https://linkedin.com/in/PaulieScanlon/</Link>\n  <Divider mdxType=\"Divider\" />\n  </Box>\n  <Box sx={{\n        width: [\"100%\", \"100%\", \"45%\"],\n        mb: 3\n      }} mdxType=\"Box\">\n \n        <h2>{`Top 5 tags`}</h2>\n  <SourceTags filter=\"posts\" mdxType=\"SourceTags\">\n    {tags => <Flex sx={{\n            flexDirection: 'column'\n          }} mdxType=\"Flex\">\n        {tags.splice(0, 5).sort((a, b) => b.percent - a.percent).map((tag, index) => {\n              const {\n                name,\n                count,\n                percent\n              } = tag;\n              return <Box key={index} sx={{\n                color: 'muted',\n                mb: 3,\n                svg: {\n                  fill: 'muted'\n                }\n              }} mdxType=\"Box\">\n                <Flex sx={{\n                  lineHeight: 'normal'\n                }} mdxType=\"Flex\">\n                  <Text sx={{\n                    color: 'secondary',\n                    mr: 2,\n                    mb: 0\n                  }} mdxType=\"Text\">{`${name}`}</Text>\n                  <Text sx={{\n                    color: 'muted'\n                  }} mdxType=\"Text\">{percent}</Text>\n                  <Text sx={{\n                    color: 'error'\n                  }} mdxType=\"Text\">%</Text>\n                </Flex>\n                <Flex mdxType=\"Flex\">\n                 <Box mdxType=\"Box\">{'['}</Box>\n                  <Box sx={{\n                    flexBasis: '100%'\n                  }} mdxType=\"Box\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1200 8\" width=\"100%\" height=\"8\">\n                      <rect width={`${percent * 3}%`} height={4} />\n                    </svg>\n                  </Box>\n                  <Box mdxType=\"Box\"> {']'}</Box>\n                </Flex>\n              </Box>;\n            })}\n      </Flex>}\n  </SourceTags>\n  </Box>\n    </Flex>\n    <h2>{`Projects`}</h2>\n    <p>{`You can use the `}<inlineCode parentName=\"p\">{`<SourceList filter=\"projects\" />`}</inlineCode>{` component from any `}<inlineCode parentName=\"p\">{`.mdx`}</inlineCode>{`. `}</p>\n    <p>{`Here we use it to return all the `}<inlineCode parentName=\"p\">{`projects`}</inlineCode>{` by using the filter prop`}</p>\n    <SourceList filter=\"projects\" mdxType=\"SourceList\">\n  {projects => <Flex sx={{\n        flexWrap: \"wrap\",\n        ml: theme => `-${theme.space[2]}px`,\n        mr: theme => `-${theme.space[2]}px`\n      }} mdxType=\"Flex\">\n      {projects.map((edge, index) => {\n          const {\n            frontmatter: {\n              title,\n              date,\n              url,\n              misc\n            },\n            fields: {\n              slug\n            }\n          } = edge.node;\n          return <Box key={index} sx={{\n            mb: 3,\n            maxWidth: [\"100%\", \"50%\", \"33.333%\"],\n            width: [\"100%\", \"50%\", \"33.333%\"]\n          }} mdxType=\"Box\">\n            <Link href={slug} sx={{\n              textDecoration: 'none'\n            }} mdxType=\"Link\">\n              <Card sx={{\n                ml: 2,\n                mr: 2,\n                p: 3\n              }} mdxType=\"Card\"> \n                <Text sx={{\n                  fontSize: 0,\n                  color: 'muted'\n                }} mdxType=\"Text\">{format(new Date(date), 'd-MMM-u')}</Text>\n                <Heading variant=\"styles.h4\" sx={{\n                  color: 'text'\n                }} mdxType=\"Heading\">{title}</Heading>\n                <Text sx={{\n                  textDecoration: 'underline'\n                }} mdxType=\"Text\">View project</Text>\n              </Card>\n            </Link>\n          </Box>;\n        })}\n    </Flex>}\n    </SourceList>\n    <h2>{`Latest Posts`}</h2>\n    <p>{`You can use the `}<inlineCode parentName=\"p\">{`<SourceList filter=\"posts\" />`}</inlineCode>{` component from any `}<inlineCode parentName=\"p\">{`.mdx`}</inlineCode>{`. `}</p>\n    <p>{`Here we use it to return the last 3 `}<inlineCode parentName=\"p\">{`posts`}</inlineCode>{` `}</p>\n    <SourceList filter=\"posts\" mdxType=\"SourceList\">\n  {posts => <Flex sx={{\n        flexWrap: \"wrap\",\n        ml: theme => `-${theme.space[2]}px`,\n        mr: theme => `-${theme.space[2]}px`\n      }} mdxType=\"Flex\">\n      {posts.filter(edge => !edge.node.frontmatter.isPrivate).sort((a, b) => new Date(b.node.frontmatter.date) - new Date(a.node.frontmatter.date)).splice(0, 3).map((edge, index) => {\n          const {\n            frontmatter: {\n              title,\n              date,\n              url,\n              misc\n            },\n            fields: {\n              slug\n            }\n          } = edge.node;\n          return <Box key={index} sx={{\n            mb: 3,\n            maxWidth: [\"100%\", \"50%\", \"33.333%\"],\n            width: [\"100%\", \"50%\", \"33.333%\"]\n          }} mdxType=\"Box\">\n            <Link href={slug} sx={{\n              textDecoration: 'none'\n            }} mdxType=\"Link\">\n              <Card sx={{\n                ml: 2,\n                mr: 2,\n                p: 3\n              }} mdxType=\"Card\"> \n                <Text sx={{\n                  fontSize: 0,\n                  color: 'muted'\n                }} mdxType=\"Text\">{format(new Date(date), 'd-MMM-u')}</Text>\n                <Heading variant=\"styles.h4\" sx={{\n                  color: 'text'\n                }} mdxType=\"Heading\">{title}</Heading>\n                <Text sx={{\n                  textDecoration: 'underline'\n                }} mdxType=\"Text\">View project</Text>\n              </Card>\n            </Link>\n          </Box>;\n        })}\n    </Flex>}\n    </SourceList>\n    <Divider mdxType=\"Divider\" />\n    <Flex sx={{\n      flexWrap: \"wrap\"\n    }} mdxType=\"Flex\">  \n  <Box sx={{\n        width: [\"100%\", \"50%\", \"33.333%\"]\n      }} mdxType=\"Box\">          \n        <h2>{`Experience`}</h2>\n  <Text mdxType=\"Text\">Company A</Text>\n  <Text variant='styles.small' mdxType=\"Text\">Feb 2019 - Feb 2020</Text>\n  <Divider mdxType=\"Divider\" />\n  <Text mdxType=\"Text\">Company B</Text>\n  <Text variant='styles.small' mdxType=\"Text\">Feb 2018 - Jan 2020</Text>\n  <Divider mdxType=\"Divider\" />\n  <Divider mdxType=\"Divider\" />\n  </Box>\n  <Box sx={{\n        width: [\"100%\", \"50%\", \"33%\"]\n      }} mdxType=\"Box\">       \n        <h2>{`Speaking`}</h2>\n  <Text mdxType=\"Text\">Conference A</Text>\n  <Text variant='styles.small' mdxType=\"Text\">Feb 2020</Text>\n  <Divider mdxType=\"Divider\" />\n  <Text mdxType=\"Text\">Conference B</Text>\n  <Text variant='styles.small' mdxType=\"Text\">Jan 2020</Text>\n  <Divider mdxType=\"Divider\" />\n  <Divider mdxType=\"Divider\" />\n  </Box>\n  <Box sx={{\n        width: [\"100%\", \"50%\", \"33%\"]\n      }} mdxType=\"Box\">          \n        <h2>{`Accolades`}</h2>\n  <Text mdxType=\"Text\">Some Award A</Text>\n  <Text variant='styles.small' mdxType=\"Text\">Feb 2020</Text>\n  <Divider mdxType=\"Divider\" />\n  <Text mdxType=\"Text\">Some Award B</Text>\n  <Text variant='styles.small' mdxType=\"Text\">Jan 2020</Text>\n  <Divider mdxType=\"Divider\" />\n  <Divider mdxType=\"Divider\" />\n  </Box>\n    </Flex>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"sourceRoot":""}