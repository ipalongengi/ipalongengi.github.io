{"version":3,"sources":["webpack:///./src/pages/projects.mdx","webpack:///./node_modules/@pauliescanlon/gatsby-theme-terminal/src/layouts/PageLayout.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","isMDXComponent","PageLayout","children","useConfig","site","siteMetadata","name","description","keywords","siteUrl","siteImage","lang","pathname","location","titleTemplate","replace","type","title","canonical","image","path","_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf"],"mappings":"4OAQaA,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,cAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,oCACA,uEA8GJH,EAAWI,gBAAiB,G,kCCnI5B,wFAkDeC,IAvCI,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAK/BC,cAHFC,KACEC,aAAgBC,EAHe,EAGfA,KAAMC,EAHS,EAGTA,YAAaC,EAHJ,EAGIA,SAAUC,EAHd,EAGcA,QAASC,EAHvB,EAGuBA,UAAWC,EAHlC,EAGkCA,KAIrE,OACE,YAAC,IAAD,KACE,YAAC,IAAD,KACE,YAAC,WAAD,MACG,YAAmB,IACVC,EADS,EAAfC,SACMD,SACFE,EAAgBF,EAASG,QAAQ,OAAQ,IAE/C,OACE,YAAC,WAAD,KACE,YAAC,IAAD,CACEC,KAAK,UACLC,MAAOX,EACPQ,cAAeA,EACfP,YAAaA,EACbE,QAASA,EACTS,UAAWN,EACXO,MAAOT,EACPU,KAAMR,EACNJ,SAAUA,GAAY,CAAC,IACvBG,KAAMA,QAMfT,M,kCC5CM,SAASmB,EAA8BC,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKP,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,EAZT","file":"component---src-pages-projects-mdx-fc77a58fab23a1f62b32.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/ichwan/Documents/repos/personal-website/demo/node_modules/@pauliescanlon/gatsby-theme-terminal/src/layouts/PageLayout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1>{`Projects`}</h1>\n    <p>{`This section is still under construction ðŸš§`}</p>\n    {\n      /* The following are notable projects that I've worked on throughout the years. Feel free to visit my GitHub account for additional projects. */\n    }\n    {\n      /* <SourceList filter=\"projects\">\n       {posts => (\n         <Flex\n           sx={{\n             flexWrap: 'wrap',\n             ml: theme => `-${theme.space[2]}px`,\n             mr: theme => `-${theme.space[2]}px`,\n           }}\n         >\n           {posts\n             .filter(edge => !edge.node.frontmatter.isPrivate)\n             .reduce((routes, route) => {\n               return route.node.frontmatter.pinned\n                 ? [route, ...routes]\n                 : [...routes, route]\n             }, [])\n             .map((edge, index) => {\n               const {\n                 featuredImageUrlSharp,\n                 frontmatter: { title, featuredImage, tags, date, pinned, misc },\n                 excerpt,\n                 fields: { slug },\n               } = edge.node\n               return (\n                 <Box\n                   key={index}\n                   sx={{\n                     display: 'flex',\n                     flex: '1 1 auto',\n                     flexDirection: 'column',\n                     mb: 3,\n                     maxWidth: ['100%', '100%', '50%', '50%'],\n                     width: ['100%', '100%', '50%', '50%'],\n                   }}\n                 >\n                   <Link\n                     href={slug}\n                     sx={{\n                       textDecoration: 'none',\n                       display: 'flex',\n                       flex: '1 1 auto',\n                       flexDirection: 'column',\n                       m: theme => `0px ${theme.space[2]}px`,\n                       minHeight: '1px',\n                     }}\n                   >\n                     <Card\n                       sx={{\n                         display: 'flex',\n                         flex: '1 1 auto',\n                         flexDirection: 'column',\n                         minHeight: '1px',\n                       }}\n                     >\n                       {featuredImage && featuredImage.childImageSharp && (\n                         <Box sx={{ minHeight: '1px' }}>\n                           <Img\n                             fluid={featuredImage.childImageSharp.fluid}\n                             alt={featuredImage.childImageSharp.fluid.originalName}\n                           />\n                         </Box>\n                       )}\n                     {featuredImageUrlSharp && featuredImageUrlSharp.childImageSharp && (\n                         <Box sx={{ minHeight: '1px' }}>\n                           <Img\n                             fluid={featuredImageUrlSharp.childImageSharp.fluid}\n                             alt={featuredImageUrlSharp.childImageSharp.fluid.originalName}\n                           />\n                         </Box>\n                       )}\n                       <Box\n                         sx={{\n                           display: 'flex',\n                           flex: '1 1 auto',\n                           flexDirection: 'column',\n                           p: 3,\n                         }}\n                       >\n                         <Heading\n                           variant=\"styles.h4\"\n                           sx={{ color: pinned ? 'primary' : 'text' }}\n                         >\n                           {title}\n                         </Heading>\n                         <Text sx={{ mb: 1, color: 'muted' }}>\n                           {misc}\n                         </Text>\n                         <Text sx={{ mb: 1, color: 'text' }}>{excerpt}</Text>\n                       </Box>\n                       <Box sx={{ p: 3 }}>\n                         <Text>View Post</Text>\n                       </Box>\n                     </Card>\n                   </Link>\n                 </Box>\n               )\n             })}\n         </Flex>\n       )}\n      </SourceList> */\n    }\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport { Fragment } from 'react'\nimport { jsx } from 'theme-ui'\nimport { Location } from '@reach/router'\nimport { ContextProvider } from '../context'\n\nimport { Seo } from '../components/Seo'\nimport { Main } from '../components/Main'\n\nimport { useConfig } from '../data'\n\nconst PageLayout = ({ children }) => {\n  const {\n    site: {\n      siteMetadata: { name, description, keywords, siteUrl, siteImage, lang },\n    },\n  } = useConfig()\n\n  return (\n    <ContextProvider>\n      <Main>\n        <Location>\n          {({ location }) => {\n            const { pathname } = location\n            const titleTemplate = pathname.replace(/\\//gm, '')\n\n            return (\n              <Fragment>\n                <Seo\n                  type=\"website\"\n                  title={name}\n                  titleTemplate={titleTemplate}\n                  description={description}\n                  siteUrl={siteUrl}\n                  canonical={pathname}\n                  image={siteImage}\n                  path={pathname}\n                  keywords={keywords || ['']}\n                  lang={lang}\n                />\n              </Fragment>\n            )\n          }}\n        </Location>\n        {children}\n      </Main>\n    </ContextProvider>\n  )\n}\n\nexport default PageLayout\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"sourceRoot":""}